{{ $resourceName := .Release.Name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $resourceName }}-proxy
  labels:
    {{- include "labels" .| nindent 4 }}
  annotations:
    {{- toYaml .Values.proxy.annotations | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.proxy.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/app: proxy
      {{- include "labels.selectorLabels" .| nindent 6 }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.proxy.annotations | nindent 8 }}
      labels:
        app.kubernetes.io/app: proxy
        {{- include "labels.selectorLabels" .| nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: proxy
          image: "{{ .Values.proxy.image.repository }}:{{ default .Chart.AppVersion .Values.proxy.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.proxy.image.pullPolicy }}
          tty: false
          stdin: false
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: main
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /root/.cache
              name: data
              subPath: cache
            - mountPath: /etc/nginx/nginx.conf
              name: config
              subPath: nginx-config
              readOnly: true
            - mountPath: /data
              name: data
              subPath: data
            - mountPath: /protected_media
              name: data
              subPath: protected-media
          {{- if .Values.proxy.resources }}
          resources:
            {{- toYaml .Values.proxy.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ $resourceName }}
        - name: config
          configMap:
            defaultMode: 420
            name: {{ $resourceName }}-nginx-config
